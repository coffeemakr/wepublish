diff --git a/libs/api/src/lib/db/article.ts b/libs/api/src/lib/db/article.ts
index 7359af6a..ea27be09 100644
--- a/libs/api/src/lib/db/article.ts
+++ b/libs/api/src/lib/db/article.ts
@@ -14,11 +14,11 @@ export interface ArticleData {
   readonly lead?: string | null
   readonly seoTitle?: string | null
   readonly slug?: string | null
-  readonly tags: string[]
+  readonly tags?: string[]
 
   readonly canonicalUrl?: string | null
 
-  readonly properties: MetadataProperty[]
+  readonly properties?: MetadataProperty[]
 
   readonly imageID?: string | null
   readonly authors: ArticleRevisionAuthor[]
@@ -107,7 +107,7 @@ export type ArticleRevisionWithRelations = PrismaArticleRevision & {
 
 export type ArticleWithRevisions = PrismaArticle & {
   draft: ArticleRevisionWithRelations | null
-  pending: ArticleRevisionWithRelations | null
+  pending?: ArticleRevisionWithRelations | null
   published: ArticleRevisionWithRelations | null
 }
 
diff --git a/libs/api/src/lib/db/page.ts b/libs/api/src/lib/db/page.ts
index fb73c289..6f0ed1b5 100644
--- a/libs/api/src/lib/db/page.ts
+++ b/libs/api/src/lib/db/page.ts
@@ -14,9 +14,9 @@ export interface PageData {
 
   readonly title: string
   readonly description?: string | null
-  readonly tags: string[]
+  readonly tags?: string[]
 
-  readonly properties: MetadataProperty[]
+  readonly properties?: MetadataProperty[]
 
   readonly imageID?: string | null
 
@@ -85,7 +85,7 @@ export type PageRevisionWithProperties = PrismaPageRevision & {
 
 export type PageWithRevisions = PrismaPage & {
   draft: PageRevisionWithProperties | null
-  pending: PageRevisionWithProperties | null
+  pending?: PageRevisionWithProperties | null
   published: PageRevisionWithProperties | null
 }
 
diff --git a/libs/api/src/lib/graphql/article.ts b/libs/api/src/lib/graphql/article.ts
index 8d80fb27..77357e01 100644
--- a/libs/api/src/lib/graphql/article.ts
+++ b/libs/api/src/lib/graphql/article.ts
@@ -275,7 +275,7 @@ export const GraphQLPublicArticle: GraphQLObjectType<PublicArticle, Context> =
         type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLMetadataPropertyPublic))),
         resolve: ({properties}) => {
           return properties
-            .filter(property => property.public)
+            ?.filter(property => property.public)
             .map(({key, value}) => ({key, value}))
         }
       },
diff --git a/libs/api/src/lib/graphql/article/article.private-mutation.ts b/libs/api/src/lib/graphql/article/article.private-mutation.ts
index 43a6a3ee..049c7e54 100644
--- a/libs/api/src/lib/graphql/article/article.private-mutation.ts
+++ b/libs/api/src/lib/graphql/article/article.private-mutation.ts
@@ -178,7 +178,8 @@ export const duplicateArticle = async (
       createMany: {
         data: socialMediaAuthors.map(({authorId}) => ({authorId}))
       }
-    }
+    },
+    blocks: []
   }
 
   return articleClient.create({
@@ -303,7 +304,8 @@ export const unpublishArticle = async (
               createMany: {
                 data: socialMediaAuthors.map(({authorId}) => ({authorId}))
               }
-            }
+            },
+            blocks: []
           },
           update: {
             ...revision,
@@ -333,7 +335,8 @@ export const unpublishArticle = async (
               createMany: {
                 data: socialMediaAuthors.map(({authorId}) => ({authorId}))
               }
-            }
+            },
+            blocks: []
           }
         }
       },
@@ -491,7 +494,8 @@ export const publishArticle = async (
                 createMany: {
                   data: socialMediaAuthors.map(({authorId}) => ({authorId}))
                 }
-              }
+              },
+              blocks: []
             },
             update: {
               ...revision,
@@ -521,7 +525,8 @@ export const publishArticle = async (
                 createMany: {
                   data: socialMediaAuthors.map(({authorId}) => ({authorId}))
                 }
-              }
+              },
+              blocks: []
             }
           }
         },
@@ -579,7 +584,8 @@ export const publishArticle = async (
               createMany: {
                 data: socialMediaAuthors.map(({authorId}) => ({authorId}))
               }
-            }
+            },
+            blocks: []
           },
           update: {
             ...revision,
@@ -609,7 +615,8 @@ export const publishArticle = async (
               createMany: {
                 data: socialMediaAuthors.map(({authorId}) => ({authorId}))
               }
-            }
+            },
+            blocks: []
           }
         }
       },
diff --git a/libs/api/src/lib/graphql/page.ts b/libs/api/src/lib/graphql/page.ts
index 56d380f0..6b63518e 100644
--- a/libs/api/src/lib/graphql/page.ts
+++ b/libs/api/src/lib/graphql/page.ts
@@ -210,7 +210,7 @@ export const GraphQLPublicPage = new GraphQLObjectType<PublicPage, Context>({
     properties: {
       type: GraphQLNonNull(GraphQLList(GraphQLNonNull(GraphQLMetadataPropertyPublic))),
       resolve: ({properties}) => {
-        return properties.filter(property => property.public).map(({key, value}) => ({key, value}))
+        return properties?.filter(property => property.public).map(({key, value}) => ({key, value}))
       }
     },
 
diff --git a/libs/api/src/lib/graphql/page/page.private-mutation.ts b/libs/api/src/lib/graphql/page/page.private-mutation.ts
index 8d21a995..456df84e 100644
--- a/libs/api/src/lib/graphql/page/page.private-mutation.ts
+++ b/libs/api/src/lib/graphql/page/page.private-mutation.ts
@@ -140,7 +140,8 @@ export const duplicatePage = async (
       createMany: {
         data: duplicatedProperties
       }
-    }
+    },
+    blocks: []
   }
 
   return pageClient.create({
@@ -236,7 +237,8 @@ export const unpublishPage = async (
               createMany: {
                 data: properties
               }
-            }
+            },
+            blocks: []
           },
           update: {
             ...revision,
@@ -250,7 +252,8 @@ export const unpublishPage = async (
               createMany: {
                 data: properties
               }
-            }
+            },
+            blocks: []
           }
         }
       },
@@ -387,7 +390,8 @@ export const publishPage = async (
                 createMany: {
                   data: properties
                 }
-              }
+              },
+              blocks: []
             },
             update: {
               ...revision,
@@ -401,7 +405,8 @@ export const publishPage = async (
                 createMany: {
                   data: properties
                 }
-              }
+              },
+              blocks: []
             }
           }
         },
@@ -443,7 +448,8 @@ export const publishPage = async (
               createMany: {
                 data: properties
               }
-            }
+            },
+            blocks: []
           },
           update: {
             ...revision,
@@ -454,7 +460,8 @@ export const publishPage = async (
               createMany: {
                 data: properties
               }
-            }
+            },
+            blocks: []
           }
         }
       },
