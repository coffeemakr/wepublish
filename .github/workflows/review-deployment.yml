name: Review deployment

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

jobs:
  deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.4.1'

      - name: Authenticate kubectl
        uses: 'google-github-actions/auth@v1'
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}

      - name: Prepare kubectl
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          cluster_name: funiciello-dev-cluster
          location: europe-west6

      - name: Ensure namespace exists
        run: |
          kubectl create namespace reviews --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy helm
        uses: vimeda/helm@v1.7.0
        with:
          release: review-${{ github.event.pull_request.number }}-app
          namespace: reviews
          chart: ./helm/charts/wepublish
          token: '${{ github.token }}'
          timeout: 30
          values: |
            deployment:
              image: ghcr.io/wepublish/wepublish
              imagePullPolicy: Always
              imagePullSecret:
              env:
                API_URL: https://api-${{ github.event.pull_request.number }}.reviews.wepublish.media
                EDITOR_URL: https://editor-${{ github.event.pull_request.number }}.reviews.wepublish.media
                WEBSITE_URL: https://website-${{ github.event.pull_request.number }}.reviews.wepublish.media
                MEDIA_SERVER_URL: https://media-${{ github.event.pull_request.number }}.reviews.wepublish.media
            api:
              env:
                GOOGLE_APPLICATION_CREDENTIALS: /var/secrets/google/key.json
                DATABASE_URL: postgres://
                MEDIA_SERVER_TOKEN: 'media-token'
                JWT_SECRET_KEY: 'jwt-token'
            editor:
              env:
                PEER_BY_DEFAULT: "true"
            website:
              enabled: false

      - name: Helm deploy media server
        run: |
          helm upgrade --install review-${{ github.event.pull_request.number }}-media-server karma-media-server --repo https://gitlab.com/api/v4/projects/38941346/packages/helm/stable --namespace reviews
          

  notify:
    needs: deployment
    if: ${{ needs.deployment.result == 'success' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm

      - name: Create Deployment Text
        id: deploymentComment
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          cd ./config
          npm ci
          OUTPUT=$(node ./notify-github.js)
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          echo "::set-OUTPUT name=result::$OUTPUT"

      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ${{ steps.deploymentComment.outputs.result }}

      - name: Notify Jira
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          cd ./config
          npm ci
          node ./notify-jira.js
