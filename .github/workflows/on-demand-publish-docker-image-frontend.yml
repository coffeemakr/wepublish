name: Publish docker frontend image

on:
  workflow_call:
    inputs:
      frontend_project:
        required: true
        type: string
      api_url:
        required: true
        type: string
      frontend_tags:
        required: true
        type: string

jobs:
  get-env-vars:
    runs-on: ubuntu-latest
    outputs:
      vars: ${{ steps.get-env.outputs.envvars }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up matrix
        id: get-env
        run: |
          ./deployment/frontend_read_env.sh production ${{ inputs.frontend_project }}

  get-env-vars-print:
    runs-on: ubuntu-latest
    steps:
      - name: Print
        run: |
          echo "VAR=${{ needs.get-env-vars.outputs.vars }}"


  build-and-push:
    name: ${{inputs.frontend_target}}
    needs: [get-env-vars]
    runs-on: ubuntu-latest
    if: ${{ needs.get-env-vars.result == 'success' }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push ${{ inputs.frontend_project }}
        uses: docker/build-push-action@v2
        with:
          context: .
          target: next
          build-args: |
            NEXT_PROJECT=${{ inputs.frontend_project }}
            API_URL=${{ inputs.api_url }}
            ${{ needs.get-env-vars.outputs.vars }}
          push: true
          tags: |
            ${{ inputs.frontend_tags }}